# ===============================
# RENDER PRODUCTION CONFIGURATION - SECURED
# ===============================

# Server configuration
server.port=${PORT:10000}
server.servlet.context-path=/

app.base-url=${APP_BASE_URL:https://gescom.onrender.com}

# Stripe Configuration - Using Environment Variables
stripe.api.secret-key=${STRIPE_SECRET_KEY:sk_test_disabled}
stripe.api.publishable-key=${STRIPE_PUBLISHABLE_KEY:pk_test_disabled}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:whsec_disabled}

# PostgreSQL Database Configuration - SECURED
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate pour Production
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Optimisations pour Production
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Pool de connexions optimisé pour Render
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=60000

# Thymeleaf en production
spring.thymeleaf.cache=true
spring.thymeleaf.enabled=true

# Security en production
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Logging pour production
logging.level.root=INFO
logging.level.com.gescom=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Cache en production
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=30m

# Mail configuration - SECURED
spring.mail.host=${MAIL_HOST:}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS:true}

# Upload configuration pour Render
app.upload.dir=/tmp/uploads
app.upload.url=/uploads
spring.servlet.multipart.location=/tmp

# Actuator pour health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized
management.health.diskspace.enabled=false

# Application info
info.app.name=GESCOM
info.app.description=Application de gestion commerciale
info.app.version=@project.version@